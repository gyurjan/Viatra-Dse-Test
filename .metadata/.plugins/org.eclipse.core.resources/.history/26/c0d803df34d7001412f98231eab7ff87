package bus;

import impl.PetriNetFactoryImpl;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.ui.plugin.AbstractUIPlugin;
import org.eclipse.viatra.dse.api.DesignSpaceExplorer;
import org.eclipse.viatra.dse.api.TransformationRule;
import org.osgi.framework.BundleContext;

import petrinet.TranCanFireMatch;
import petrinet.TranCanFireMatcher;
import petrinet.util.TranCanFireProcessor;
import petrinet.util.TranCanFireQuerySpecification;
import PetriNet.PetriNetFactory;
import PetriNet.Transition;

/**
 * The activator class controls the plug-in life cycle
 */
public class Activator extends AbstractUIPlugin {

	// The plug-in ID
	public static final String PLUGIN_ID = "bus"; //$NON-NLS-1$

	// The shared instance
	private static Activator plugin;
	
	/**
	 * The constructor
	 */
	public Activator() {
	}

	/*
	 * (non-Javadoc)
	 * @see org.eclipse.ui.plugin.AbstractUIPlugin#start(org.osgi.framework.BundleContext)
	 */
	public void start(BundleContext context) throws Exception {
		super.start(context);
		plugin = this;		
		DesignSpaceExplorer dse = new DesignSpaceExplorer();
		PetriNetFactory pnf;
		pnf=new PetriNetFactoryImpl();
		EObject root =pnf.createPetriNet();
		TransformationRule<TranCanFireMatch> rule = 
			    new TransformationRule<TranCanFireMatch>(
			    		TranCanFireQuerySpecification.instance(), new TranCanFireProcessor() {
			 
			        @Override
			        public void process(final Transition pT) {
			           
			            
			        }
			    });
			 
			dse.addTransformation(rule);
	}

	/*
	 * (non-Javadoc)
	 * @see org.eclipse.ui.plugin.AbstractUIPlugin#stop(org.osgi.framework.BundleContext)
	 */
	public void stop(BundleContext context) throws Exception {
		plugin = null;
		super.stop(context);
	}

	/**
	 * Returns the shared instance
	 *
	 * @return the shared instance
	 */
	public static Activator getDefault() {
		return plugin;
	}

}
